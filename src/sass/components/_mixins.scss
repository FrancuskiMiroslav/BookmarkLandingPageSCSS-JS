@mixin main {
  html {
    scroll-behavior: smooth;
    box-sizing: border-box;
    font-family: $main_font, $secondary_font, Verdana, Geneva, Tahoma, sans-serif;
  }

  body {
    font-size: 18px;
  }

  *,
  *:before,
  *:after {
    box-sizing: inherit;
    padding: 0;
    margin: 0;
  }

  ul,
  ol {
    list-style: none;
  }

  a {
    text-decoration: none;
  }

  h2,
  h3,
  h4 {
    font-weight: 500;
  }

  p {
    color: $grayishBlue;
    line-height: 26px;
  }

  .btn-primary {
    @include btn-primary;
  }

  .btn-secondary {
    @include btn-secondary;
  }

  .btn-tertiary {
    @include btn-tertiary;
  }

  .btn-primary,
  .btn-secondary,
  .btn-tertiary {
    text-align: center;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    border-radius: 5px;
    font-weight: 600;
    transition: 0.5s ease-in-out;
  }
}

// responsive fonts
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

// media queries
@mixin media-max-width($point) {
  @media (max-width: #{$point}px) {
    @content;
  }
}

@mixin media-min-width($point) {
  @media (min-width: #{$point}px) {
    @content;
  }
}

@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin css3-prefix($prop, $value) {
  -webkit-#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
  #{$prop}: #{$value};
}

@mixin font-face($name, $file) {
  @font-face {
    font-family: "#{$name}";
    src: url("../fonts/#{$file}.eot");
    src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"), url("../fonts/#{$file}.woff") format("woff"),
      url("../fonts/#{$file}.ttf") format("truetype"), url("../fonts/#{$file}.svg?#webfont") format("svg");
  }
}

@mixin btn-primary {
  border: 2px solid $primary_clr;
  background-color: $primary_clr;
  padding: 16px 25px;
  color: #ffffff;
  border: 2px solid $primary_clr;

  &:hover {
    border: 2px solid $primary_clr;
    color: $primary_clr;
    background-color: #ffffff;
  }
}

@mixin btn-secondary {
  border: 2px solid $secondary_clr;
  background-color: $secondary_clr;
  padding: 8px 35px;
  color: #ffffff;

  &:hover {
    background-color: #ffffff;
    border: 2px solid $secondary_clr;
    box-shadow: 0px 8px 15px -10px rgba(0, 0, 0, 0.75);
  }
}
@mixin btn-tertiary {
  box-shadow: 0px 8px 15px -10px rgba(0, 0, 0, 0.75);
  padding: 16px 25px;
  color: $grayishBlue;
  border: none;
  background-color: #ffffff;
  border: 2px solid #ffffff;

  &:hover {
    border: 2px solid $veryDarkBlue;
    color: $veryDarkBlue;
    box-shadow: none;
  }
}

@mixin easeOut {
  transition: all 0.8s ease-out;
}

@mixin fixedFooter {
  min-height: calc(100vh - 60px);
}

@mixin background($image) {
  @if $show-image {
    background: #{$image};
    background-attachment: fixed;
    background-size: cover;
    background-position: center;

    &:before {
      content: "";
      position: fixed;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      background: rgba($primary_clr, $background-opacity);
      z-index: -100;
    }
  }
}

@mixin wrapper($max-width, $padding) {
  max-width: #{$max-width}px;
  margin: 0 auto;
  padding: 0 #{$padding}px;
}
